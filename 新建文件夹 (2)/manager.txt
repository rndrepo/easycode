##定义初始变量
$!init
#set($tableName = $tool.append($tableInfo.name, "Manager"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/manager"))

##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.google.common.base.Preconditions;
import $!{tableInfo.savePackageName}.entity.po.$!{tableInfo.name}Po;
import $!{tableInfo.savePackageName}.entity.qo.$!{tableInfo.name}Qo;
import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;
import $!{tableInfo.savePackageName}.service.I$!{tableInfo.name}Service;
import com.nwf.common.core.constant.CommonConstant;
import com.nwf.common.core.exception.*;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.springframework.validation.annotation.Validated;
import com.nwf.athena.common.core.exception.BusinessException;

import javax.validation.Valid;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import java.time.LocalDateTime;
import java.util.List;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})服务实现类
 *
 * @since $!time.currTime()
 */
@Slf4j
@Service
@Validated
public class $!{tableName} implements I$!{tableInfo.name}Manager {

    @Autowired
    private $!{tableInfo.name}Service $!tool.firstLowerCase($!{tableInfo.name})Service;

    /**
     * 通过ID删除数据
     *
     * @param idList 主键列表
     * @return 是否成功
     */
    @Override
    public void delete$!{tableInfo.name}ByIdList(@Valid @NotEmpty List<$!pk.shortType> idList) {
		//============ 以下为约束条件   ==============
		
		
		//============ 以下为预设默认值   ==============
		
		
        //============ 以下为正常执行的业务逻辑   ==============
        idList.forEach(id -> $!tool.firstLowerCase($!{tableInfo.name})Service..delete$!{tableInfo.name}ById(id));
    }
}